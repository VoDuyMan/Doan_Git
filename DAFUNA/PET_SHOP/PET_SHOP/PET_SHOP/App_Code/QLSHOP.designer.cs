#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Pet_Shop")]
public partial class QLSHOPDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCategory(Category instance);
  partial void UpdateCategory(Category instance);
  partial void DeleteCategory(Category instance);
  partial void InsertMenu(Menu instance);
  partial void UpdateMenu(Menu instance);
  partial void DeleteMenu(Menu instance);
  partial void InsertOption(Option instance);
  partial void UpdateOption(Option instance);
  partial void DeleteOption(Option instance);
  partial void InsertProducer(Producer instance);
  partial void UpdateProducer(Producer instance);
  partial void DeleteProducer(Producer instance);
  partial void InsertRole(Role instance);
  partial void UpdateRole(Role instance);
  partial void DeleteRole(Role instance);
  partial void InsertToken(Token instance);
  partial void UpdateToken(Token instance);
  partial void DeleteToken(Token instance);
  partial void InsertOrder_Detail(Order_Detail instance);
  partial void UpdateOrder_Detail(Order_Detail instance);
  partial void DeleteOrder_Detail(Order_Detail instance);
  partial void InsertUser(User instance);
  partial void UpdateUser(User instance);
  partial void DeleteUser(User instance);
  partial void InsertFeedBack(FeedBack instance);
  partial void UpdateFeedBack(FeedBack instance);
  partial void DeleteFeedBack(FeedBack instance);
  partial void InsertOrder(Order instance);
  partial void UpdateOrder(Order instance);
  partial void DeleteOrder(Order instance);
  partial void InsertDetail_Order(Detail_Order instance);
  partial void UpdateDetail_Order(Detail_Order instance);
  partial void DeleteDetail_Order(Detail_Order instance);
  partial void InsertProduct(Product instance);
  partial void UpdateProduct(Product instance);
  partial void DeleteProduct(Product instance);
  partial void InsertRole1(Role1 instance);
  partial void UpdateRole1(Role1 instance);
  partial void DeleteRole1(Role1 instance);
  #endregion
	
	public QLSHOPDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Pet_ShopConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public QLSHOPDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public QLSHOPDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public QLSHOPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public QLSHOPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Category> Categories
	{
		get
		{
			return this.GetTable<Category>();
		}
	}
	
	public System.Data.Linq.Table<Menu> Menus
	{
		get
		{
			return this.GetTable<Menu>();
		}
	}
	
	public System.Data.Linq.Table<Option> Options
	{
		get
		{
			return this.GetTable<Option>();
		}
	}
	
	public System.Data.Linq.Table<Producer> Producers
	{
		get
		{
			return this.GetTable<Producer>();
		}
	}
	
	public System.Data.Linq.Table<Role> Roles
	{
		get
		{
			return this.GetTable<Role>();
		}
	}
	
	public System.Data.Linq.Table<Token> Tokens
	{
		get
		{
			return this.GetTable<Token>();
		}
	}
	
	public System.Data.Linq.Table<Order_Detail> Order_Details
	{
		get
		{
			return this.GetTable<Order_Detail>();
		}
	}
	
	public System.Data.Linq.Table<User> Users
	{
		get
		{
			return this.GetTable<User>();
		}
	}
	
	public System.Data.Linq.Table<FeedBack> FeedBacks
	{
		get
		{
			return this.GetTable<FeedBack>();
		}
	}
	
	public System.Data.Linq.Table<Order> Orders
	{
		get
		{
			return this.GetTable<Order>();
		}
	}
	
	public System.Data.Linq.Table<Detail_Order> Detail_Orders
	{
		get
		{
			return this.GetTable<Detail_Order>();
		}
	}
	
	public System.Data.Linq.Table<Product> Products
	{
		get
		{
			return this.GetTable<Product>();
		}
	}
	
	public System.Data.Linq.Table<Role1> Role1s
	{
		get
		{
			return this.GetTable<Role1>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _name;
	
	private System.Nullable<int> _locations;
	
	private EntitySet<Product> _Products;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnlocationsChanging(System.Nullable<int> value);
    partial void OnlocationsChanged();
    #endregion
	
	public Category()
	{
		this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locations", DbType="Int")]
	public System.Nullable<int> locations
	{
		get
		{
			return this._locations;
		}
		set
		{
			if ((this._locations != value))
			{
				this.OnlocationsChanging(value);
				this.SendPropertyChanging();
				this._locations = value;
				this.SendPropertyChanged("locations");
				this.OnlocationsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Products", ThisKey="id", OtherKey="category_id")]
	public EntitySet<Product> Products
	{
		get
		{
			return this._Products;
		}
		set
		{
			this._Products.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.Category = this;
	}
	
	private void detach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.Category = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _name;
	
	private System.Nullable<int> _locations;
	
	private EntitySet<Product> _Products;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnlocationsChanging(System.Nullable<int> value);
    partial void OnlocationsChanged();
    #endregion
	
	public Menu()
	{
		this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locations", DbType="Int")]
	public System.Nullable<int> locations
	{
		get
		{
			return this._locations;
		}
		set
		{
			if ((this._locations != value))
			{
				this.OnlocationsChanging(value);
				this.SendPropertyChanging();
				this._locations = value;
				this.SendPropertyChanged("locations");
				this.OnlocationsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Product", Storage="_Products", ThisKey="id", OtherKey="menu_id")]
	public EntitySet<Product> Products
	{
		get
		{
			return this._Products;
		}
		set
		{
			this._Products.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.Menu = this;
	}
	
	private void detach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.Menu = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Options")]
public partial class Option : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _name;
	
	private string _thumbnail;
	
	private System.Nullable<int> _location;
	
	private EntitySet<Product> _Products;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnthumbnailChanging(string value);
    partial void OnthumbnailChanged();
    partial void OnlocationChanging(System.Nullable<int> value);
    partial void OnlocationChanged();
    #endregion
	
	public Option()
	{
		this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnail", DbType="VarChar(500)")]
	public string thumbnail
	{
		get
		{
			return this._thumbnail;
		}
		set
		{
			if ((this._thumbnail != value))
			{
				this.OnthumbnailChanging(value);
				this.SendPropertyChanging();
				this._thumbnail = value;
				this.SendPropertyChanged("thumbnail");
				this.OnthumbnailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="Int")]
	public System.Nullable<int> location
	{
		get
		{
			return this._location;
		}
		set
		{
			if ((this._location != value))
			{
				this.OnlocationChanging(value);
				this.SendPropertyChanging();
				this._location = value;
				this.SendPropertyChanged("location");
				this.OnlocationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Option_Product", Storage="_Products", ThisKey="id", OtherKey="options_id")]
	public EntitySet<Product> Products
	{
		get
		{
			return this._Products;
		}
		set
		{
			this._Products.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.Option = this;
	}
	
	private void detach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.Option = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producer")]
public partial class Producer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _name;
	
	private System.Nullable<int> _locations;
	
	private EntitySet<Product> _Products;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnlocationsChanging(System.Nullable<int> value);
    partial void OnlocationsChanged();
    #endregion
	
	public Producer()
	{
		this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locations", DbType="Int")]
	public System.Nullable<int> locations
	{
		get
		{
			return this._locations;
		}
		set
		{
			if ((this._locations != value))
			{
				this.OnlocationsChanging(value);
				this.SendPropertyChanging();
				this._locations = value;
				this.SendPropertyChanged("locations");
				this.OnlocationsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producer_Product", Storage="_Products", ThisKey="id", OtherKey="producer_id")]
	public EntitySet<Product> Products
	{
		get
		{
			return this._Products;
		}
		set
		{
			this._Products.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.Producer = this;
	}
	
	private void detach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.Producer = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _name;
	
	private EntitySet<User> _Users;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
	
	public Role()
	{
		this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(20)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Users", ThisKey="id", OtherKey="role_id")]
	public EntitySet<User> Users
	{
		get
		{
			return this._Users;
		}
		set
		{
			this._Users.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Users(User entity)
	{
		this.SendPropertyChanging();
		entity.Role = this;
	}
	
	private void detach_Users(User entity)
	{
		this.SendPropertyChanging();
		entity.Role = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tokens")]
public partial class Token : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _user_id;
	
	private string _token1;
	
	private System.Nullable<System.DateTime> _created_at;
	
	private EntityRef<User> _User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Ontoken1Changing(string value);
    partial void Ontoken1Changed();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    #endregion
	
	public Token()
	{
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="token", Storage="_token1", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string token1
	{
		get
		{
			return this._token1;
		}
		set
		{
			if ((this._token1 != value))
			{
				this.Ontoken1Changing(value);
				this.SendPropertyChanging();
				this._token1 = value;
				this.SendPropertyChanged("token1");
				this.Ontoken1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
	public System.Nullable<System.DateTime> created_at
	{
		get
		{
			return this._created_at;
		}
		set
		{
			if ((this._created_at != value))
			{
				this.Oncreated_atChanging(value);
				this.SendPropertyChanging();
				this._created_at = value;
				this.SendPropertyChanged("created_at");
				this.Oncreated_atChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Token", Storage="_User", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Tokens.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Tokens.Add(this);
					this._user_id = value.id;
				}
				else
				{
					this._user_id = default(int);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_Details")]
public partial class Order_Detail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private System.Nullable<int> _order_id;
	
	private System.Nullable<int> _product_id;
	
	private System.Nullable<int> _price;
	
	private System.Nullable<int> _num;
	
	private System.Nullable<int> _total_money;
	
	private System.Nullable<int> _user_id;
	
	private System.Nullable<decimal> _TotalPrice;
	
	private EntityRef<User> _User;
	
	private EntityRef<Order> _Order;
	
	private EntityRef<Product> _Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onorder_idChanging(System.Nullable<int> value);
    partial void Onorder_idChanged();
    partial void Onproduct_idChanging(System.Nullable<int> value);
    partial void Onproduct_idChanged();
    partial void OnpriceChanging(System.Nullable<int> value);
    partial void OnpriceChanged();
    partial void OnnumChanging(System.Nullable<int> value);
    partial void OnnumChanged();
    partial void Ontotal_moneyChanging(System.Nullable<int> value);
    partial void Ontotal_moneyChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void OnTotalPriceChanging(System.Nullable<decimal> value);
    partial void OnTotalPriceChanged();
    #endregion
	
	public Order_Detail()
	{
		this._User = default(EntityRef<User>);
		this._Order = default(EntityRef<Order>);
		this._Product = default(EntityRef<Product>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int")]
	public System.Nullable<int> order_id
	{
		get
		{
			return this._order_id;
		}
		set
		{
			if ((this._order_id != value))
			{
				if (this._Order.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onorder_idChanging(value);
				this.SendPropertyChanging();
				this._order_id = value;
				this.SendPropertyChanged("order_id");
				this.Onorder_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int")]
	public System.Nullable<int> product_id
	{
		get
		{
			return this._product_id;
		}
		set
		{
			if ((this._product_id != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onproduct_idChanging(value);
				this.SendPropertyChanging();
				this._product_id = value;
				this.SendPropertyChanged("product_id");
				this.Onproduct_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int")]
	public System.Nullable<int> price
	{
		get
		{
			return this._price;
		}
		set
		{
			if ((this._price != value))
			{
				this.OnpriceChanging(value);
				this.SendPropertyChanging();
				this._price = value;
				this.SendPropertyChanged("price");
				this.OnpriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num", DbType="Int")]
	public System.Nullable<int> num
	{
		get
		{
			return this._num;
		}
		set
		{
			if ((this._num != value))
			{
				this.OnnumChanging(value);
				this.SendPropertyChanging();
				this._num = value;
				this.SendPropertyChanged("num");
				this.OnnumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_money", DbType="Int")]
	public System.Nullable<int> total_money
	{
		get
		{
			return this._total_money;
		}
		set
		{
			if ((this._total_money != value))
			{
				this.Ontotal_moneyChanging(value);
				this.SendPropertyChanging();
				this._total_money = value;
				this.SendPropertyChanged("total_money");
				this.Ontotal_moneyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
	public System.Nullable<int> user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> TotalPrice
	{
		get
		{
			return this._TotalPrice;
		}
		set
		{
			if ((this._TotalPrice != value))
			{
				this.OnTotalPriceChanging(value);
				this.SendPropertyChanging();
				this._TotalPrice = value;
				this.SendPropertyChanged("TotalPrice");
				this.OnTotalPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order_Detail", Storage="_User", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Order_Details.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Order_Details.Add(this);
					this._user_id = value.id;
				}
				else
				{
					this._user_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Order_Detail", Storage="_Order", ThisKey="order_id", OtherKey="id", IsForeignKey=true)]
	public Order Order
	{
		get
		{
			return this._Order.Entity;
		}
		set
		{
			Order previousValue = this._Order.Entity;
			if (((previousValue != value) 
						|| (this._Order.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Order.Entity = null;
					previousValue.Order_Details.Remove(this);
				}
				this._Order.Entity = value;
				if ((value != null))
				{
					value.Order_Details.Add(this);
					this._order_id = value.id;
				}
				else
				{
					this._order_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Order");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Order_Detail", Storage="_Product", ThisKey="product_id", OtherKey="id", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.Order_Details.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.Order_Details.Add(this);
					this._product_id = value.id;
				}
				else
				{
					this._product_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _firstname;
	
	private string _lastname;
	
	private string _email;
	
	private string _phone_number;
	
	private string _address;
	
	private string _password;
	
	private System.Nullable<int> _role_id;
	
	private System.Nullable<System.DateTime> _created_at;
	
	private System.Nullable<System.DateTime> _updated_at;
	
	private System.Nullable<int> _deleted;
	
	private string _thumbnail;
	
	private EntitySet<Token> _Tokens;
	
	private EntitySet<Order_Detail> _Order_Details;
	
	private EntitySet<FeedBack> _FeedBacks;
	
	private EntitySet<Order> _Orders;
	
	private EntitySet<Detail_Order> _Detail_Orders;
	
	private EntityRef<Role> _Role;
	
	private EntityRef<Role1> _Role1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onrole_idChanging(System.Nullable<int> value);
    partial void Onrole_idChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    partial void Onupdated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onupdated_atChanged();
    partial void OndeletedChanging(System.Nullable<int> value);
    partial void OndeletedChanged();
    partial void OnthumbnailChanging(string value);
    partial void OnthumbnailChanged();
    #endregion
	
	public User()
	{
		this._Tokens = new EntitySet<Token>(new Action<Token>(this.attach_Tokens), new Action<Token>(this.detach_Tokens));
		this._Order_Details = new EntitySet<Order_Detail>(new Action<Order_Detail>(this.attach_Order_Details), new Action<Order_Detail>(this.detach_Order_Details));
		this._FeedBacks = new EntitySet<FeedBack>(new Action<FeedBack>(this.attach_FeedBacks), new Action<FeedBack>(this.detach_FeedBacks));
		this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
		this._Detail_Orders = new EntitySet<Detail_Order>(new Action<Detail_Order>(this.attach_Detail_Orders), new Action<Detail_Order>(this.detach_Detail_Orders));
		this._Role = default(EntityRef<Role>);
		this._Role1 = default(EntityRef<Role1>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="NVarChar(30)")]
	public string firstname
	{
		get
		{
			return this._firstname;
		}
		set
		{
			if ((this._firstname != value))
			{
				this.OnfirstnameChanging(value);
				this.SendPropertyChanging();
				this._firstname = value;
				this.SendPropertyChanged("firstname");
				this.OnfirstnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="NVarChar(30)")]
	public string lastname
	{
		get
		{
			return this._lastname;
		}
		set
		{
			if ((this._lastname != value))
			{
				this.OnlastnameChanging(value);
				this.SendPropertyChanging();
				this._lastname = value;
				this.SendPropertyChanged("lastname");
				this.OnlastnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(150)")]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="VarChar(20)")]
	public string phone_number
	{
		get
		{
			return this._phone_number;
		}
		set
		{
			if ((this._phone_number != value))
			{
				this.Onphone_numberChanging(value);
				this.SendPropertyChanging();
				this._phone_number = value;
				this.SendPropertyChanged("phone_number");
				this.Onphone_numberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(200)")]
	public string address
	{
		get
		{
			return this._address;
		}
		set
		{
			if ((this._address != value))
			{
				this.OnaddressChanging(value);
				this.SendPropertyChanging();
				this._address = value;
				this.SendPropertyChanged("address");
				this.OnaddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(32)")]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this.OnpasswordChanging(value);
				this.SendPropertyChanging();
				this._password = value;
				this.SendPropertyChanged("password");
				this.OnpasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int")]
	public System.Nullable<int> role_id
	{
		get
		{
			return this._role_id;
		}
		set
		{
			if ((this._role_id != value))
			{
				if ((this._Role.HasLoadedOrAssignedValue || this._Role1.HasLoadedOrAssignedValue))
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onrole_idChanging(value);
				this.SendPropertyChanging();
				this._role_id = value;
				this.SendPropertyChanged("role_id");
				this.Onrole_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
	public System.Nullable<System.DateTime> created_at
	{
		get
		{
			return this._created_at;
		}
		set
		{
			if ((this._created_at != value))
			{
				this.Oncreated_atChanging(value);
				this.SendPropertyChanging();
				this._created_at = value;
				this.SendPropertyChanged("created_at");
				this.Oncreated_atChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated_at", DbType="DateTime")]
	public System.Nullable<System.DateTime> updated_at
	{
		get
		{
			return this._updated_at;
		}
		set
		{
			if ((this._updated_at != value))
			{
				this.Onupdated_atChanging(value);
				this.SendPropertyChanging();
				this._updated_at = value;
				this.SendPropertyChanged("updated_at");
				this.Onupdated_atChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted", DbType="Int")]
	public System.Nullable<int> deleted
	{
		get
		{
			return this._deleted;
		}
		set
		{
			if ((this._deleted != value))
			{
				this.OndeletedChanging(value);
				this.SendPropertyChanging();
				this._deleted = value;
				this.SendPropertyChanged("deleted");
				this.OndeletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnail", DbType="VarChar(500)")]
	public string thumbnail
	{
		get
		{
			return this._thumbnail;
		}
		set
		{
			if ((this._thumbnail != value))
			{
				this.OnthumbnailChanging(value);
				this.SendPropertyChanging();
				this._thumbnail = value;
				this.SendPropertyChanged("thumbnail");
				this.OnthumbnailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Token", Storage="_Tokens", ThisKey="id", OtherKey="user_id")]
	public EntitySet<Token> Tokens
	{
		get
		{
			return this._Tokens;
		}
		set
		{
			this._Tokens.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order_Detail", Storage="_Order_Details", ThisKey="id", OtherKey="user_id")]
	public EntitySet<Order_Detail> Order_Details
	{
		get
		{
			return this._Order_Details;
		}
		set
		{
			this._Order_Details.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FeedBack", Storage="_FeedBacks", ThisKey="id", OtherKey="user_id")]
	public EntitySet<FeedBack> FeedBacks
	{
		get
		{
			return this._FeedBacks;
		}
		set
		{
			this._FeedBacks.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_Orders", ThisKey="id", OtherKey="user_id")]
	public EntitySet<Order> Orders
	{
		get
		{
			return this._Orders;
		}
		set
		{
			this._Orders.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Detail_Order", Storage="_Detail_Orders", ThisKey="id", OtherKey="user_id")]
	public EntitySet<Detail_Order> Detail_Orders
	{
		get
		{
			return this._Detail_Orders;
		}
		set
		{
			this._Detail_Orders.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Role", ThisKey="role_id", OtherKey="id", IsForeignKey=true)]
	public Role Role
	{
		get
		{
			return this._Role.Entity;
		}
		set
		{
			Role previousValue = this._Role.Entity;
			if (((previousValue != value) 
						|| (this._Role.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Role.Entity = null;
					previousValue.Users.Remove(this);
				}
				this._Role.Entity = value;
				if ((value != null))
				{
					value.Users.Add(this);
					this._role_id = value.id;
				}
				else
				{
					this._role_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Role");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role1_User", Storage="_Role1", ThisKey="role_id", OtherKey="id", IsForeignKey=true)]
	public Role1 Role1
	{
		get
		{
			return this._Role1.Entity;
		}
		set
		{
			Role1 previousValue = this._Role1.Entity;
			if (((previousValue != value) 
						|| (this._Role1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Role1.Entity = null;
					previousValue.Users.Remove(this);
				}
				this._Role1.Entity = value;
				if ((value != null))
				{
					value.Users.Add(this);
					this._role_id = value.id;
				}
				else
				{
					this._role_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Role1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Tokens(Token entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Tokens(Token entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_Order_Details(Order_Detail entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Order_Details(Order_Detail entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_FeedBacks(FeedBack entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_FeedBacks(FeedBack entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_Orders(Order entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Orders(Order entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_Detail_Orders(Detail_Order entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Detail_Orders(Detail_Order entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeedBack")]
public partial class FeedBack : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _fullname;
	
	private string _email;
	
	private string _note;
	
	private System.Nullable<int> _status;
	
	private System.Nullable<System.DateTime> _created_at;
	
	private System.Nullable<int> _user_id;
	
	private EntityRef<User> _User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfullnameChanging(string value);
    partial void OnfullnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    #endregion
	
	public FeedBack()
	{
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullname", DbType="NVarChar(30)")]
	public string fullname
	{
		get
		{
			return this._fullname;
		}
		set
		{
			if ((this._fullname != value))
			{
				this.OnfullnameChanging(value);
				this.SendPropertyChanging();
				this._fullname = value;
				this.SendPropertyChanged("fullname");
				this.OnfullnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(250)")]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="nVarChar(1000)")]
	public string note
	{
		get
		{
			return this._note;
		}
		set
		{
			if ((this._note != value))
			{
				this.OnnoteChanging(value);
				this.SendPropertyChanging();
				this._note = value;
				this.SendPropertyChanged("note");
				this.OnnoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
	public System.Nullable<int> status
	{
		get
		{
			return this._status;
		}
		set
		{
			if ((this._status != value))
			{
				this.OnstatusChanging(value);
				this.SendPropertyChanging();
				this._status = value;
				this.SendPropertyChanged("status");
				this.OnstatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
	public System.Nullable<System.DateTime> created_at
	{
		get
		{
			return this._created_at;
		}
		set
		{
			if ((this._created_at != value))
			{
				this.Oncreated_atChanging(value);
				this.SendPropertyChanging();
				this._created_at = value;
				this.SendPropertyChanged("created_at");
				this.Oncreated_atChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
	public System.Nullable<int> user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FeedBack", Storage="_User", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.FeedBacks.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.FeedBacks.Add(this);
					this._user_id = value.id;
				}
				else
				{
					this._user_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private System.Nullable<int> _user_id;
	
	private string _fullname;
	
	private string _email;
	
	private string _phone_number;
	
	private string _address;
	
	private System.Nullable<System.DateTime> _order_date;
	
	private System.Nullable<int> _status;
	
	private System.Nullable<int> _total_money;
	
	private System.Nullable<int> _product_id;
	
	private EntitySet<Order_Detail> _Order_Details;
	
	private EntitySet<Detail_Order> _Detail_Orders;
	
	private EntityRef<User> _User;
	
	private EntityRef<Product> _Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void OnfullnameChanging(string value);
    partial void OnfullnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onorder_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onorder_dateChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void Ontotal_moneyChanging(System.Nullable<int> value);
    partial void Ontotal_moneyChanged();
    partial void Onproduct_idChanging(System.Nullable<int> value);
    partial void Onproduct_idChanged();
    #endregion
	
	public Order()
	{
		this._Order_Details = new EntitySet<Order_Detail>(new Action<Order_Detail>(this.attach_Order_Details), new Action<Order_Detail>(this.detach_Order_Details));
		this._Detail_Orders = new EntitySet<Detail_Order>(new Action<Detail_Order>(this.attach_Detail_Orders), new Action<Detail_Order>(this.detach_Detail_Orders));
		this._User = default(EntityRef<User>);
		this._Product = default(EntityRef<Product>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
	public System.Nullable<int> user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullname", DbType="NVarChar(50)")]
	public string fullname
	{
		get
		{
			return this._fullname;
		}
		set
		{
			if ((this._fullname != value))
			{
				this.OnfullnameChanging(value);
				this.SendPropertyChanging();
				this._fullname = value;
				this.SendPropertyChanged("fullname");
				this.OnfullnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(150)")]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="VarChar(20)")]
	public string phone_number
	{
		get
		{
			return this._phone_number;
		}
		set
		{
			if ((this._phone_number != value))
			{
				this.Onphone_numberChanging(value);
				this.SendPropertyChanging();
				this._phone_number = value;
				this.SendPropertyChanged("phone_number");
				this.Onphone_numberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(200)")]
	public string address
	{
		get
		{
			return this._address;
		}
		set
		{
			if ((this._address != value))
			{
				this.OnaddressChanging(value);
				this.SendPropertyChanging();
				this._address = value;
				this.SendPropertyChanged("address");
				this.OnaddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_date", DbType="DateTime")]
	public System.Nullable<System.DateTime> order_date
	{
		get
		{
			return this._order_date;
		}
		set
		{
			if ((this._order_date != value))
			{
				this.Onorder_dateChanging(value);
				this.SendPropertyChanging();
				this._order_date = value;
				this.SendPropertyChanged("order_date");
				this.Onorder_dateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
	public System.Nullable<int> status
	{
		get
		{
			return this._status;
		}
		set
		{
			if ((this._status != value))
			{
				this.OnstatusChanging(value);
				this.SendPropertyChanging();
				this._status = value;
				this.SendPropertyChanged("status");
				this.OnstatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_money", DbType="Int")]
	public System.Nullable<int> total_money
	{
		get
		{
			return this._total_money;
		}
		set
		{
			if ((this._total_money != value))
			{
				this.Ontotal_moneyChanging(value);
				this.SendPropertyChanging();
				this._total_money = value;
				this.SendPropertyChanged("total_money");
				this.Ontotal_moneyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int")]
	public System.Nullable<int> product_id
	{
		get
		{
			return this._product_id;
		}
		set
		{
			if ((this._product_id != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onproduct_idChanging(value);
				this.SendPropertyChanging();
				this._product_id = value;
				this.SendPropertyChanged("product_id");
				this.Onproduct_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Order_Detail", Storage="_Order_Details", ThisKey="id", OtherKey="order_id")]
	public EntitySet<Order_Detail> Order_Details
	{
		get
		{
			return this._Order_Details;
		}
		set
		{
			this._Order_Details.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Order", Storage="_Detail_Orders", ThisKey="id", OtherKey="order_id")]
	public EntitySet<Detail_Order> Detail_Orders
	{
		get
		{
			return this._Detail_Orders;
		}
		set
		{
			this._Detail_Orders.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_User", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Orders.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Orders.Add(this);
					this._user_id = value.id;
				}
				else
				{
					this._user_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Order", Storage="_Product", ThisKey="product_id", OtherKey="id", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.Orders.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.Orders.Add(this);
					this._product_id = value.id;
				}
				else
				{
					this._product_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Order_Details(Order_Detail entity)
	{
		this.SendPropertyChanging();
		entity.Order = this;
	}
	
	private void detach_Order_Details(Order_Detail entity)
	{
		this.SendPropertyChanging();
		entity.Order = null;
	}
	
	private void attach_Detail_Orders(Detail_Order entity)
	{
		this.SendPropertyChanging();
		entity.Order = this;
	}
	
	private void detach_Detail_Orders(Detail_Order entity)
	{
		this.SendPropertyChanging();
		entity.Order = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detail_Order")]
public partial class Detail_Order : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private System.Nullable<int> _order_id;
	
	private System.Nullable<int> _product_id;
	
	private System.Nullable<int> _quantity;
	
	private System.Nullable<int> _user_id;
	
	private EntityRef<Order> _Order;
	
	private EntityRef<User> _User;
	
	private EntityRef<Product> _Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onorder_idChanging(System.Nullable<int> value);
    partial void Onorder_idChanged();
    partial void Onproduct_idChanging(System.Nullable<int> value);
    partial void Onproduct_idChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    #endregion
	
	public Detail_Order()
	{
		this._Order = default(EntityRef<Order>);
		this._User = default(EntityRef<User>);
		this._Product = default(EntityRef<Product>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int")]
	public System.Nullable<int> order_id
	{
		get
		{
			return this._order_id;
		}
		set
		{
			if ((this._order_id != value))
			{
				if (this._Order.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onorder_idChanging(value);
				this.SendPropertyChanging();
				this._order_id = value;
				this.SendPropertyChanged("order_id");
				this.Onorder_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int")]
	public System.Nullable<int> product_id
	{
		get
		{
			return this._product_id;
		}
		set
		{
			if ((this._product_id != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onproduct_idChanging(value);
				this.SendPropertyChanging();
				this._product_id = value;
				this.SendPropertyChanged("product_id");
				this.Onproduct_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
	public System.Nullable<int> quantity
	{
		get
		{
			return this._quantity;
		}
		set
		{
			if ((this._quantity != value))
			{
				this.OnquantityChanging(value);
				this.SendPropertyChanging();
				this._quantity = value;
				this.SendPropertyChanged("quantity");
				this.OnquantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
	public System.Nullable<int> user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Detail_Order", Storage="_Order", ThisKey="order_id", OtherKey="id", IsForeignKey=true)]
	public Order Order
	{
		get
		{
			return this._Order.Entity;
		}
		set
		{
			Order previousValue = this._Order.Entity;
			if (((previousValue != value) 
						|| (this._Order.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Order.Entity = null;
					previousValue.Detail_Orders.Remove(this);
				}
				this._Order.Entity = value;
				if ((value != null))
				{
					value.Detail_Orders.Add(this);
					this._order_id = value.id;
				}
				else
				{
					this._order_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Order");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Detail_Order", Storage="_User", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Detail_Orders.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Detail_Orders.Add(this);
					this._user_id = value.id;
				}
				else
				{
					this._user_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Detail_Order", Storage="_Product", ThisKey="product_id", OtherKey="id", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.Detail_Orders.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.Detail_Orders.Add(this);
					this._product_id = value.id;
				}
				else
				{
					this._product_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private System.Nullable<int> _category_id;
	
	private System.Nullable<int> _producer_id;
	
	private System.Nullable<int> _options_id;
	
	private System.Nullable<int> _menu_id;
	
	private string _title;
	
	private System.Nullable<int> _price;
	
	private string _thumbnail;
	
	private string _description;
	
	private System.Nullable<System.DateTime> _created_at;
	
	private System.Nullable<System.DateTime> _updated_at;
	
	private System.Nullable<int> _inventory;
	
	private System.Nullable<int> _outstanding;
	
	private System.Nullable<int> _deleted;
	
	private EntitySet<Order_Detail> _Order_Details;
	
	private EntitySet<Order> _Orders;
	
	private EntitySet<Detail_Order> _Detail_Orders;
	
	private EntityRef<Category> _Category;
	
	private EntityRef<Menu> _Menu;
	
	private EntityRef<Option> _Option;
	
	private EntityRef<Producer> _Producer;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncategory_idChanging(System.Nullable<int> value);
    partial void Oncategory_idChanged();
    partial void Onproducer_idChanging(System.Nullable<int> value);
    partial void Onproducer_idChanged();
    partial void Onoptions_idChanging(System.Nullable<int> value);
    partial void Onoptions_idChanged();
    partial void Onmenu_idChanging(System.Nullable<int> value);
    partial void Onmenu_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnpriceChanging(System.Nullable<int> value);
    partial void OnpriceChanged();
    partial void OnthumbnailChanging(string value);
    partial void OnthumbnailChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    partial void Onupdated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onupdated_atChanged();
    partial void OninventoryChanging(System.Nullable<int> value);
    partial void OninventoryChanged();
    partial void OnoutstandingChanging(System.Nullable<int> value);
    partial void OnoutstandingChanged();
    partial void OndeletedChanging(System.Nullable<int> value);
    partial void OndeletedChanged();
    #endregion
	
	public Product()
	{
		this._Order_Details = new EntitySet<Order_Detail>(new Action<Order_Detail>(this.attach_Order_Details), new Action<Order_Detail>(this.detach_Order_Details));
		this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
		this._Detail_Orders = new EntitySet<Detail_Order>(new Action<Detail_Order>(this.attach_Detail_Orders), new Action<Detail_Order>(this.detach_Detail_Orders));
		this._Category = default(EntityRef<Category>);
		this._Menu = default(EntityRef<Menu>);
		this._Option = default(EntityRef<Option>);
		this._Producer = default(EntityRef<Producer>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="Int")]
	public System.Nullable<int> category_id
	{
		get
		{
			return this._category_id;
		}
		set
		{
			if ((this._category_id != value))
			{
				if (this._Category.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Oncategory_idChanging(value);
				this.SendPropertyChanging();
				this._category_id = value;
				this.SendPropertyChanged("category_id");
				this.Oncategory_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_producer_id", DbType="Int")]
	public System.Nullable<int> producer_id
	{
		get
		{
			return this._producer_id;
		}
		set
		{
			if ((this._producer_id != value))
			{
				if (this._Producer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onproducer_idChanging(value);
				this.SendPropertyChanging();
				this._producer_id = value;
				this.SendPropertyChanged("producer_id");
				this.Onproducer_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_options_id", DbType="Int")]
	public System.Nullable<int> options_id
	{
		get
		{
			return this._options_id;
		}
		set
		{
			if ((this._options_id != value))
			{
				if (this._Option.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onoptions_idChanging(value);
				this.SendPropertyChanging();
				this._options_id = value;
				this.SendPropertyChanged("options_id");
				this.Onoptions_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_menu_id", DbType="Int")]
	public System.Nullable<int> menu_id
	{
		get
		{
			return this._menu_id;
		}
		set
		{
			if ((this._menu_id != value))
			{
				if (this._Menu.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onmenu_idChanging(value);
				this.SendPropertyChanging();
				this._menu_id = value;
				this.SendPropertyChanged("menu_id");
				this.Onmenu_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(250)")]
	public string title
	{
		get
		{
			return this._title;
		}
		set
		{
			if ((this._title != value))
			{
				this.OntitleChanging(value);
				this.SendPropertyChanging();
				this._title = value;
				this.SendPropertyChanged("title");
				this.OntitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int")]
	public System.Nullable<int> price
	{
		get
		{
			return this._price;
		}
		set
		{
			if ((this._price != value))
			{
				this.OnpriceChanging(value);
				this.SendPropertyChanging();
				this._price = value;
				this.SendPropertyChanged("price");
				this.OnpriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnail", DbType="VarChar(500)")]
	public string thumbnail
	{
		get
		{
			return this._thumbnail;
		}
		set
		{
			if ((this._thumbnail != value))
			{
				this.OnthumbnailChanging(value);
				this.SendPropertyChanging();
				this._thumbnail = value;
				this.SendPropertyChanged("thumbnail");
				this.OnthumbnailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(500)")]
	public string description
	{
		get
		{
			return this._description;
		}
		set
		{
			if ((this._description != value))
			{
				this.OndescriptionChanging(value);
				this.SendPropertyChanging();
				this._description = value;
				this.SendPropertyChanged("description");
				this.OndescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
	public System.Nullable<System.DateTime> created_at
	{
		get
		{
			return this._created_at;
		}
		set
		{
			if ((this._created_at != value))
			{
				this.Oncreated_atChanging(value);
				this.SendPropertyChanging();
				this._created_at = value;
				this.SendPropertyChanged("created_at");
				this.Oncreated_atChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated_at", DbType="DateTime")]
	public System.Nullable<System.DateTime> updated_at
	{
		get
		{
			return this._updated_at;
		}
		set
		{
			if ((this._updated_at != value))
			{
				this.Onupdated_atChanging(value);
				this.SendPropertyChanging();
				this._updated_at = value;
				this.SendPropertyChanged("updated_at");
				this.Onupdated_atChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inventory", DbType="Int")]
	public System.Nullable<int> inventory
	{
		get
		{
			return this._inventory;
		}
		set
		{
			if ((this._inventory != value))
			{
				this.OninventoryChanging(value);
				this.SendPropertyChanging();
				this._inventory = value;
				this.SendPropertyChanged("inventory");
				this.OninventoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outstanding", DbType="Int")]
	public System.Nullable<int> outstanding
	{
		get
		{
			return this._outstanding;
		}
		set
		{
			if ((this._outstanding != value))
			{
				this.OnoutstandingChanging(value);
				this.SendPropertyChanging();
				this._outstanding = value;
				this.SendPropertyChanged("outstanding");
				this.OnoutstandingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted", DbType="Int")]
	public System.Nullable<int> deleted
	{
		get
		{
			return this._deleted;
		}
		set
		{
			if ((this._deleted != value))
			{
				this.OndeletedChanging(value);
				this.SendPropertyChanging();
				this._deleted = value;
				this.SendPropertyChanged("deleted");
				this.OndeletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Order_Detail", Storage="_Order_Details", ThisKey="id", OtherKey="product_id")]
	public EntitySet<Order_Detail> Order_Details
	{
		get
		{
			return this._Order_Details;
		}
		set
		{
			this._Order_Details.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Order", Storage="_Orders", ThisKey="id", OtherKey="product_id")]
	public EntitySet<Order> Orders
	{
		get
		{
			return this._Orders;
		}
		set
		{
			this._Orders.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Detail_Order", Storage="_Detail_Orders", ThisKey="id", OtherKey="product_id")]
	public EntitySet<Detail_Order> Detail_Orders
	{
		get
		{
			return this._Detail_Orders;
		}
		set
		{
			this._Detail_Orders.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Category", ThisKey="category_id", OtherKey="id", IsForeignKey=true)]
	public Category Category
	{
		get
		{
			return this._Category.Entity;
		}
		set
		{
			Category previousValue = this._Category.Entity;
			if (((previousValue != value) 
						|| (this._Category.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Category.Entity = null;
					previousValue.Products.Remove(this);
				}
				this._Category.Entity = value;
				if ((value != null))
				{
					value.Products.Add(this);
					this._category_id = value.id;
				}
				else
				{
					this._category_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Category");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Product", Storage="_Menu", ThisKey="menu_id", OtherKey="id", IsForeignKey=true)]
	public Menu Menu
	{
		get
		{
			return this._Menu.Entity;
		}
		set
		{
			Menu previousValue = this._Menu.Entity;
			if (((previousValue != value) 
						|| (this._Menu.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Menu.Entity = null;
					previousValue.Products.Remove(this);
				}
				this._Menu.Entity = value;
				if ((value != null))
				{
					value.Products.Add(this);
					this._menu_id = value.id;
				}
				else
				{
					this._menu_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Menu");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Option_Product", Storage="_Option", ThisKey="options_id", OtherKey="id", IsForeignKey=true)]
	public Option Option
	{
		get
		{
			return this._Option.Entity;
		}
		set
		{
			Option previousValue = this._Option.Entity;
			if (((previousValue != value) 
						|| (this._Option.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Option.Entity = null;
					previousValue.Products.Remove(this);
				}
				this._Option.Entity = value;
				if ((value != null))
				{
					value.Products.Add(this);
					this._options_id = value.id;
				}
				else
				{
					this._options_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Option");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producer_Product", Storage="_Producer", ThisKey="producer_id", OtherKey="id", IsForeignKey=true)]
	public Producer Producer
	{
		get
		{
			return this._Producer.Entity;
		}
		set
		{
			Producer previousValue = this._Producer.Entity;
			if (((previousValue != value) 
						|| (this._Producer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Producer.Entity = null;
					previousValue.Products.Remove(this);
				}
				this._Producer.Entity = value;
				if ((value != null))
				{
					value.Products.Add(this);
					this._producer_id = value.id;
				}
				else
				{
					this._producer_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Producer");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Order_Details(Order_Detail entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_Order_Details(Order_Detail entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
	
	private void attach_Orders(Order entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_Orders(Order entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
	
	private void attach_Detail_Orders(Detail_Order entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_Detail_Orders(Detail_Order entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
public partial class Role1 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _name;
	
	private EntitySet<User> _Users;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
	
	public Role1()
	{
		this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(20)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role1_User", Storage="_Users", ThisKey="id", OtherKey="role_id")]
	public EntitySet<User> Users
	{
		get
		{
			return this._Users;
		}
		set
		{
			this._Users.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Users(User entity)
	{
		this.SendPropertyChanging();
		entity.Role1 = this;
	}
	
	private void detach_Users(User entity)
	{
		this.SendPropertyChanging();
		entity.Role1 = null;
	}
}
#pragma warning restore 1591
